# RELEASE.local
#
# Read definitions of:
#	EPICS_SITE_TOP
#	BASE_MODULE_VERSION
#	EPICS_MODULES 
# from one of the following options
-include $(TOP)/../../RELEASE_SITE
-include $(TOP)/RELEASE_SITE

# Check that EPICS_MODULES was defined in a RELEASE_SITE file
-include $(TOP)/../../RELEASE_SITE.check

# ===============================================================
# Define the version(s) of any other needed modules 
# ===============================================================
# Example
ASYN_MODULE_VERSION   = R4.31-0.1.0
BUSY_MODULE_VERSION   = R1.6.1-0.2.4
CALC_MODULE_VERSION   = R3.6.1-0.1.0
SSCAN_MODULE_VERSION  = R2.10.2-1.0.0
ADCORE_MODULE_VERSION = R2.6-2.1.0

# ==========================================================
# External Support module path definitions
#
# If any of these macros expand to a path which
# contains an "include" directory, that directory will be
# included in the compiler include path.
#
# If any of these macros expand to a path which
# contains a "lib/<arch>" directory, that directory will be
# included in the compiler link path for that architecture.
#
# If your build fails, look for these paths in your build output
# ==========================================================
ASYN   = $(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
BUSY   = $(EPICS_MODULES)/busy/$(BUSY_MODULE_VERSION)
CALC   = $(EPICS_MODULES)/calc/$(CALC_MODULE_VERSION)
SSCAN  = $(EPICS_MODULES)/sscan/$(SSCAN_MODULE_VERSION)
ADCORE = $(EPICS_MODULES)/ADCore/$(ADCORE_MODULE_VERSION)


# Set EPICS_BASE last so it appears last in the DB, DBD, INCLUDE, and LIB search paths
EPICS_BASE = $(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)

# Check for invalid or undefined EPICS_BASE
-include $(TOP)/../../EPICS_BASE.check

